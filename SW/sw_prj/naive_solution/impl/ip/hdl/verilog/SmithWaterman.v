// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SmithWaterman,hls_ip_2019_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-fsgd2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.941500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=19,HLS_SYN_DSP=2,HLS_SYN_FF=996,HLS_SYN_LUT=1939,HLS_VERSION=2019_2}" *)

module SmithWaterman (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        seq1_address0,
        seq1_ce0,
        seq1_q0,
        seq2_address0,
        seq2_ce0,
        seq2_q0,
        aligned_seq1_address0,
        aligned_seq1_ce0,
        aligned_seq1_we0,
        aligned_seq1_d0,
        aligned_seq1_q0,
        n,
        n_ap_vld,
        aligned_seq2_address0,
        aligned_seq2_ce0,
        aligned_seq2_we0,
        aligned_seq2_d0,
        aligned_seq2_q0,
        m,
        m_ap_vld,
        l,
        l_ap_vld
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] seq1_address0;
output   seq1_ce0;
input  [7:0] seq1_q0;
output  [6:0] seq2_address0;
output   seq2_ce0;
input  [7:0] seq2_q0;
output  [6:0] aligned_seq1_address0;
output   aligned_seq1_ce0;
output   aligned_seq1_we0;
output  [7:0] aligned_seq1_d0;
input  [7:0] aligned_seq1_q0;
output  [31:0] n;
output   n_ap_vld;
output  [6:0] aligned_seq2_address0;
output   aligned_seq2_ce0;
output   aligned_seq2_we0;
output  [7:0] aligned_seq2_d0;
input  [7:0] aligned_seq2_q0;
output  [31:0] m;
output   m_ap_vld;
output  [31:0] l;
output   l_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[6:0] seq1_address0;
reg seq1_ce0;
reg[6:0] seq2_address0;
reg seq2_ce0;
reg[31:0] n;
reg n_ap_vld;
reg m_ap_vld;
reg l_ap_vld;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln25_fu_216_p2;
reg   [0:0] icmp_ln25_reg_296;
wire    ap_CS_fsm_state2;
wire   [6:0] i_fu_248_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln27_fu_242_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln33_fu_259_p2;
wire   [6:0] i_3_fu_277_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln35_fu_271_p2;
reg   [31:0] pos_0_reg_329;
wire    ap_CS_fsm_state7;
wire    grp_align_fu_203_ap_ready;
wire    grp_align_fu_203_ap_done;
reg   [31:0] pos_1_reg_334;
reg   [13:0] H_address0;
reg    H_ce0;
reg    H_we0;
wire   [31:0] H_q0;
reg   [13:0] H_address1;
reg    H_ce1;
reg    H_we1;
wire   [31:0] H_q1;
wire    grp_traceback_fu_187_ap_start;
wire    grp_traceback_fu_187_ap_done;
wire    grp_traceback_fu_187_ap_idle;
wire    grp_traceback_fu_187_ap_ready;
wire   [6:0] grp_traceback_fu_187_seq1_address0;
wire    grp_traceback_fu_187_seq1_ce0;
wire   [6:0] grp_traceback_fu_187_seq2_address0;
wire    grp_traceback_fu_187_seq2_ce0;
wire   [13:0] grp_traceback_fu_187_H_address0;
wire    grp_traceback_fu_187_H_ce0;
wire   [13:0] grp_traceback_fu_187_H_address1;
wire    grp_traceback_fu_187_H_ce1;
wire   [6:0] grp_traceback_fu_187_aligned_seq1_address0;
wire    grp_traceback_fu_187_aligned_seq1_ce0;
wire    grp_traceback_fu_187_aligned_seq1_we0;
wire   [7:0] grp_traceback_fu_187_aligned_seq1_d0;
wire   [6:0] grp_traceback_fu_187_aligned_seq2_address0;
wire    grp_traceback_fu_187_aligned_seq2_ce0;
wire    grp_traceback_fu_187_aligned_seq2_we0;
wire   [7:0] grp_traceback_fu_187_aligned_seq2_d0;
wire   [31:0] grp_traceback_fu_187_ap_return;
wire    grp_align_fu_203_ap_start;
wire    grp_align_fu_203_ap_idle;
wire   [6:0] grp_align_fu_203_seq1_address0;
wire    grp_align_fu_203_seq1_ce0;
wire   [6:0] grp_align_fu_203_seq2_address0;
wire    grp_align_fu_203_seq2_ce0;
wire   [13:0] grp_align_fu_203_H_address0;
wire    grp_align_fu_203_H_ce0;
wire   [13:0] grp_align_fu_203_H_address1;
wire    grp_align_fu_203_H_ce1;
wire    grp_align_fu_203_H_we1;
wire   [31:0] grp_align_fu_203_H_d1;
wire   [31:0] grp_align_fu_203_ap_return_0;
wire   [31:0] grp_align_fu_203_ap_return_1;
reg   [6:0] i_0_reg_137;
reg   [6:0] n_load_reg_149;
reg   [6:0] i_1_reg_162;
reg   [6:0] m_local_0_reg_174;
reg    grp_traceback_fu_187_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_align_fu_203_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln26_fu_222_p1;
wire   [63:0] zext_ln26_2_fu_237_p1;
wire   [63:0] zext_ln34_fu_265_p1;
wire   [31:0] zext_ln25_fu_254_p1;
wire   [6:0] mul_ln26_fu_231_p0;
wire   [14:0] mul_ln26_fu_231_p2;
reg   [8:0] ap_NS_fsm;
wire   [14:0] mul_ln26_fu_231_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_traceback_fu_187_ap_start_reg = 1'b0;
#0 grp_align_fu_203_ap_start_reg = 1'b0;
end

SmithWaterman_H #(
    .DataWidth( 32 ),
    .AddressRange( 10201 ),
    .AddressWidth( 14 ))
H_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(H_address0),
    .ce0(H_ce0),
    .we0(H_we0),
    .d0(32'd0),
    .q0(H_q0),
    .address1(H_address1),
    .ce1(H_ce1),
    .we1(H_we1),
    .d1(grp_align_fu_203_H_d1),
    .q1(H_q1)
);

traceback grp_traceback_fu_187(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_traceback_fu_187_ap_start),
    .ap_done(grp_traceback_fu_187_ap_done),
    .ap_idle(grp_traceback_fu_187_ap_idle),
    .ap_ready(grp_traceback_fu_187_ap_ready),
    .seq1_address0(grp_traceback_fu_187_seq1_address0),
    .seq1_ce0(grp_traceback_fu_187_seq1_ce0),
    .seq1_q0(seq1_q0),
    .seq2_address0(grp_traceback_fu_187_seq2_address0),
    .seq2_ce0(grp_traceback_fu_187_seq2_ce0),
    .seq2_q0(seq2_q0),
    .H_address0(grp_traceback_fu_187_H_address0),
    .H_ce0(grp_traceback_fu_187_H_ce0),
    .H_q0(H_q0),
    .H_address1(grp_traceback_fu_187_H_address1),
    .H_ce1(grp_traceback_fu_187_H_ce1),
    .H_q1(H_q1),
    .pos_0_read(pos_0_reg_329),
    .pos_1_read(pos_1_reg_334),
    .aligned_seq1_address0(grp_traceback_fu_187_aligned_seq1_address0),
    .aligned_seq1_ce0(grp_traceback_fu_187_aligned_seq1_ce0),
    .aligned_seq1_we0(grp_traceback_fu_187_aligned_seq1_we0),
    .aligned_seq1_d0(grp_traceback_fu_187_aligned_seq1_d0),
    .aligned_seq1_q0(aligned_seq1_q0),
    .aligned_seq2_address0(grp_traceback_fu_187_aligned_seq2_address0),
    .aligned_seq2_ce0(grp_traceback_fu_187_aligned_seq2_ce0),
    .aligned_seq2_we0(grp_traceback_fu_187_aligned_seq2_we0),
    .aligned_seq2_d0(grp_traceback_fu_187_aligned_seq2_d0),
    .aligned_seq2_q0(aligned_seq2_q0),
    .ap_return(grp_traceback_fu_187_ap_return)
);

align grp_align_fu_203(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_align_fu_203_ap_start),
    .ap_done(grp_align_fu_203_ap_done),
    .ap_idle(grp_align_fu_203_ap_idle),
    .ap_ready(grp_align_fu_203_ap_ready),
    .seq1_address0(grp_align_fu_203_seq1_address0),
    .seq1_ce0(grp_align_fu_203_seq1_ce0),
    .seq1_q0(seq1_q0),
    .n(n_load_reg_149),
    .seq2_address0(grp_align_fu_203_seq2_address0),
    .seq2_ce0(grp_align_fu_203_seq2_ce0),
    .seq2_q0(seq2_q0),
    .m(m_local_0_reg_174),
    .H_address0(grp_align_fu_203_H_address0),
    .H_ce0(grp_align_fu_203_H_ce0),
    .H_q0(H_q0),
    .H_address1(grp_align_fu_203_H_address1),
    .H_ce1(grp_align_fu_203_H_ce1),
    .H_we1(grp_align_fu_203_H_we1),
    .H_d1(grp_align_fu_203_H_d1),
    .H_q1(H_q1),
    .ap_return_0(grp_align_fu_203_ap_return_0),
    .ap_return_1(grp_align_fu_203_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_align_fu_203_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_align_fu_203_ap_start_reg <= 1'b1;
        end else if ((grp_align_fu_203_ap_ready == 1'b1)) begin
            grp_align_fu_203_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_traceback_fu_187_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_traceback_fu_187_ap_start_reg <= 1'b1;
        end else if ((grp_traceback_fu_187_ap_ready == 1'b1)) begin
            grp_traceback_fu_187_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln27_fu_242_p2 == 1'd0) & (icmp_ln25_reg_296 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_137 <= i_fu_248_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_137 <= 7'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln35_fu_271_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        i_1_reg_162 <= i_3_fu_277_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln27_fu_242_p2 == 1'd1) | (icmp_ln25_reg_296 == 1'd0)))) begin
        i_1_reg_162 <= 7'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_259_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        m_local_0_reg_174 <= 7'd100;
    end else if (((icmp_ln35_fu_271_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        m_local_0_reg_174 <= i_1_reg_162;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_216_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        n_load_reg_149 <= 7'd100;
    end else if (((icmp_ln27_fu_242_p2 == 1'd1) & (icmp_ln25_reg_296 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        n_load_reg_149 <= i_0_reg_137;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln25_reg_296 <= icmp_ln25_fu_216_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_align_fu_203_ap_done == 1'b1))) begin
        pos_0_reg_329 <= grp_align_fu_203_ap_return_0;
        pos_1_reg_334 <= grp_align_fu_203_ap_return_1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        H_address0 = zext_ln34_fu_265_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        H_address0 = zext_ln26_2_fu_237_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        H_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        H_address0 = grp_align_fu_203_H_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        H_address0 = grp_traceback_fu_187_H_address0;
    end else begin
        H_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        H_address1 = grp_align_fu_203_H_address1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        H_address1 = grp_traceback_fu_187_H_address1;
    end else begin
        H_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        H_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        H_ce0 = grp_align_fu_203_H_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        H_ce0 = grp_traceback_fu_187_H_ce0;
    end else begin
        H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        H_ce1 = grp_align_fu_203_H_ce1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        H_ce1 = grp_traceback_fu_187_H_ce1;
    end else begin
        H_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln33_fu_259_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4)) | ((icmp_ln25_reg_296 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        H_we0 = 1'b1;
    end else begin
        H_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        H_we1 = grp_align_fu_203_H_we1;
    end else begin
        H_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_traceback_fu_187_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_traceback_fu_187_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_traceback_fu_187_ap_done == 1'b1))) begin
        l_ap_vld = 1'b1;
    end else begin
        l_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        m_ap_vld = 1'b1;
    end else begin
        m_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln27_fu_242_p2 == 1'd1) & (icmp_ln25_reg_296 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        n = zext_ln25_fu_254_p1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        n = 32'd100;
    end else begin
        n = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln27_fu_242_p2 == 1'd1) & (icmp_ln25_reg_296 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        n_ap_vld = 1'b1;
    end else begin
        n_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seq1_address0 = zext_ln26_fu_222_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        seq1_address0 = grp_align_fu_203_seq1_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        seq1_address0 = grp_traceback_fu_187_seq1_address0;
    end else begin
        seq1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        seq1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        seq1_ce0 = grp_align_fu_203_seq1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        seq1_ce0 = grp_traceback_fu_187_seq1_ce0;
    end else begin
        seq1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        seq2_address0 = zext_ln34_fu_265_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        seq2_address0 = grp_align_fu_203_seq2_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        seq2_address0 = grp_traceback_fu_187_seq2_address0;
    end else begin
        seq2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        seq2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        seq2_ce0 = grp_align_fu_203_seq2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        seq2_ce0 = grp_traceback_fu_187_seq2_ce0;
    end else begin
        seq2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln27_fu_242_p2 == 1'd1) | (icmp_ln25_reg_296 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln33_fu_259_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln35_fu_271_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_align_fu_203_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_traceback_fu_187_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aligned_seq1_address0 = grp_traceback_fu_187_aligned_seq1_address0;

assign aligned_seq1_ce0 = grp_traceback_fu_187_aligned_seq1_ce0;

assign aligned_seq1_d0 = grp_traceback_fu_187_aligned_seq1_d0;

assign aligned_seq1_we0 = grp_traceback_fu_187_aligned_seq1_we0;

assign aligned_seq2_address0 = grp_traceback_fu_187_aligned_seq2_address0;

assign aligned_seq2_ce0 = grp_traceback_fu_187_aligned_seq2_ce0;

assign aligned_seq2_d0 = grp_traceback_fu_187_aligned_seq2_d0;

assign aligned_seq2_we0 = grp_traceback_fu_187_aligned_seq2_we0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_align_fu_203_ap_start = grp_align_fu_203_ap_start_reg;

assign grp_traceback_fu_187_ap_start = grp_traceback_fu_187_ap_start_reg;

assign i_3_fu_277_p2 = (i_1_reg_162 + 7'd1);

assign i_fu_248_p2 = (i_0_reg_137 + 7'd1);

assign icmp_ln25_fu_216_p2 = ((i_0_reg_137 < 7'd101) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_242_p2 = ((seq1_q0 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_259_p2 = ((i_1_reg_162 < 7'd101) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_271_p2 = ((seq2_q0 == 8'd0) ? 1'b1 : 1'b0);

assign l = grp_traceback_fu_187_ap_return;

assign m = m_local_0_reg_174;

assign mul_ln26_fu_231_p0 = mul_ln26_fu_231_p00;

assign mul_ln26_fu_231_p00 = i_0_reg_137;

assign mul_ln26_fu_231_p2 = (mul_ln26_fu_231_p0 * $signed('h65));

assign zext_ln25_fu_254_p1 = i_0_reg_137;

assign zext_ln26_2_fu_237_p1 = mul_ln26_fu_231_p2;

assign zext_ln26_fu_222_p1 = i_0_reg_137;

assign zext_ln34_fu_265_p1 = i_1_reg_162;

endmodule //SmithWaterman
