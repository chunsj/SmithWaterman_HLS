// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "SmithWaterman.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic SmithWaterman::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic SmithWaterman::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> SmithWaterman::ap_ST_fsm_state1 = "1";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state2 = "10";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state3 = "100";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state4 = "1000";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state5 = "10000";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state6 = "100000";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> SmithWaterman::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> SmithWaterman::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> SmithWaterman::ap_const_lv32_1 = "1";
const sc_lv<1> SmithWaterman::ap_const_lv1_1 = "1";
const sc_lv<32> SmithWaterman::ap_const_lv32_2 = "10";
const sc_lv<1> SmithWaterman::ap_const_lv1_0 = "0";
const sc_lv<32> SmithWaterman::ap_const_lv32_3 = "11";
const sc_lv<32> SmithWaterman::ap_const_lv32_4 = "100";
const sc_lv<32> SmithWaterman::ap_const_lv32_6 = "110";
const sc_lv<7> SmithWaterman::ap_const_lv7_1 = "1";
const sc_lv<7> SmithWaterman::ap_const_lv7_64 = "1100100";
const sc_lv<32> SmithWaterman::ap_const_lv32_7 = "111";
const sc_lv<32> SmithWaterman::ap_const_lv32_8 = "1000";
const sc_lv<32> SmithWaterman::ap_const_lv32_5 = "101";
const sc_lv<64> SmithWaterman::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> SmithWaterman::ap_const_lv32_64 = "1100100";
const sc_lv<7> SmithWaterman::ap_const_lv7_65 = "1100101";
const sc_lv<15> SmithWaterman::ap_const_lv15_65 = "1100101";
const sc_lv<8> SmithWaterman::ap_const_lv8_0 = "00000000";
const bool SmithWaterman::ap_const_boolean_1 = true;

SmithWaterman::SmithWaterman(sc_module_name name) : sc_module(name), mVcdFile(0) {
    H_U = new SmithWaterman_H("H_U");
    H_U->clk(ap_clk);
    H_U->reset(ap_rst);
    H_U->address0(H_address0);
    H_U->ce0(H_ce0);
    H_U->we0(H_we0);
    H_U->d0(ap_var_for_const0);
    H_U->q0(H_q0);
    H_U->address1(H_address1);
    H_U->ce1(H_ce1);
    H_U->we1(H_we1);
    H_U->d1(grp_align_fu_203_H_d1);
    H_U->q1(H_q1);
    grp_traceback_fu_187 = new traceback("grp_traceback_fu_187");
    grp_traceback_fu_187->ap_clk(ap_clk);
    grp_traceback_fu_187->ap_rst(ap_rst);
    grp_traceback_fu_187->ap_start(grp_traceback_fu_187_ap_start);
    grp_traceback_fu_187->ap_done(grp_traceback_fu_187_ap_done);
    grp_traceback_fu_187->ap_idle(grp_traceback_fu_187_ap_idle);
    grp_traceback_fu_187->ap_ready(grp_traceback_fu_187_ap_ready);
    grp_traceback_fu_187->seq1_address0(grp_traceback_fu_187_seq1_address0);
    grp_traceback_fu_187->seq1_ce0(grp_traceback_fu_187_seq1_ce0);
    grp_traceback_fu_187->seq1_q0(seq1_q0);
    grp_traceback_fu_187->seq2_address0(grp_traceback_fu_187_seq2_address0);
    grp_traceback_fu_187->seq2_ce0(grp_traceback_fu_187_seq2_ce0);
    grp_traceback_fu_187->seq2_q0(seq2_q0);
    grp_traceback_fu_187->H_address0(grp_traceback_fu_187_H_address0);
    grp_traceback_fu_187->H_ce0(grp_traceback_fu_187_H_ce0);
    grp_traceback_fu_187->H_q0(H_q0);
    grp_traceback_fu_187->H_address1(grp_traceback_fu_187_H_address1);
    grp_traceback_fu_187->H_ce1(grp_traceback_fu_187_H_ce1);
    grp_traceback_fu_187->H_q1(H_q1);
    grp_traceback_fu_187->pos_0_read(pos_0_reg_329);
    grp_traceback_fu_187->pos_1_read(pos_1_reg_334);
    grp_traceback_fu_187->aligned_seq1_address0(grp_traceback_fu_187_aligned_seq1_address0);
    grp_traceback_fu_187->aligned_seq1_ce0(grp_traceback_fu_187_aligned_seq1_ce0);
    grp_traceback_fu_187->aligned_seq1_we0(grp_traceback_fu_187_aligned_seq1_we0);
    grp_traceback_fu_187->aligned_seq1_d0(grp_traceback_fu_187_aligned_seq1_d0);
    grp_traceback_fu_187->aligned_seq1_q0(aligned_seq1_q0);
    grp_traceback_fu_187->aligned_seq2_address0(grp_traceback_fu_187_aligned_seq2_address0);
    grp_traceback_fu_187->aligned_seq2_ce0(grp_traceback_fu_187_aligned_seq2_ce0);
    grp_traceback_fu_187->aligned_seq2_we0(grp_traceback_fu_187_aligned_seq2_we0);
    grp_traceback_fu_187->aligned_seq2_d0(grp_traceback_fu_187_aligned_seq2_d0);
    grp_traceback_fu_187->aligned_seq2_q0(aligned_seq2_q0);
    grp_traceback_fu_187->ap_return(grp_traceback_fu_187_ap_return);
    grp_align_fu_203 = new align("grp_align_fu_203");
    grp_align_fu_203->ap_clk(ap_clk);
    grp_align_fu_203->ap_rst(ap_rst);
    grp_align_fu_203->ap_start(grp_align_fu_203_ap_start);
    grp_align_fu_203->ap_done(grp_align_fu_203_ap_done);
    grp_align_fu_203->ap_idle(grp_align_fu_203_ap_idle);
    grp_align_fu_203->ap_ready(grp_align_fu_203_ap_ready);
    grp_align_fu_203->seq1_address0(grp_align_fu_203_seq1_address0);
    grp_align_fu_203->seq1_ce0(grp_align_fu_203_seq1_ce0);
    grp_align_fu_203->seq1_q0(seq1_q0);
    grp_align_fu_203->n(n_load_reg_149);
    grp_align_fu_203->seq2_address0(grp_align_fu_203_seq2_address0);
    grp_align_fu_203->seq2_ce0(grp_align_fu_203_seq2_ce0);
    grp_align_fu_203->seq2_q0(seq2_q0);
    grp_align_fu_203->m(m_local_0_reg_174);
    grp_align_fu_203->H_address0(grp_align_fu_203_H_address0);
    grp_align_fu_203->H_ce0(grp_align_fu_203_H_ce0);
    grp_align_fu_203->H_q0(H_q0);
    grp_align_fu_203->H_address1(grp_align_fu_203_H_address1);
    grp_align_fu_203->H_ce1(grp_align_fu_203_H_ce1);
    grp_align_fu_203->H_we1(grp_align_fu_203_H_we1);
    grp_align_fu_203->H_d1(grp_align_fu_203_H_d1);
    grp_align_fu_203->H_q1(H_q1);
    grp_align_fu_203->ap_return_0(grp_align_fu_203_ap_return_0);
    grp_align_fu_203->ap_return_1(grp_align_fu_203_ap_return_1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_H_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_H_address0 );
    sensitive << ( grp_align_fu_203_H_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln26_2_fu_237_p1 );
    sensitive << ( zext_ln34_fu_265_p1 );

    SC_METHOD(thread_H_address1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_H_address1 );
    sensitive << ( grp_align_fu_203_H_address1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_H_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_H_ce0 );
    sensitive << ( grp_align_fu_203_H_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_H_ce1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_H_ce1 );
    sensitive << ( grp_align_fu_203_H_ce1 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_H_we0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln25_reg_296 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln33_fu_259_p2 );

    SC_METHOD(thread_H_we1);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_align_fu_203_H_we1 );

    SC_METHOD(thread_aligned_seq1_address0);
    sensitive << ( grp_traceback_fu_187_aligned_seq1_address0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq1_ce0);
    sensitive << ( grp_traceback_fu_187_aligned_seq1_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq1_d0);
    sensitive << ( grp_traceback_fu_187_aligned_seq1_d0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq1_we0);
    sensitive << ( grp_traceback_fu_187_aligned_seq1_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq2_address0);
    sensitive << ( grp_traceback_fu_187_aligned_seq2_address0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq2_ce0);
    sensitive << ( grp_traceback_fu_187_aligned_seq2_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq2_d0);
    sensitive << ( grp_traceback_fu_187_aligned_seq2_d0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_aligned_seq2_we0);
    sensitive << ( grp_traceback_fu_187_aligned_seq2_we0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_traceback_fu_187_ap_done );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_traceback_fu_187_ap_done );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_align_fu_203_ap_start);
    sensitive << ( grp_align_fu_203_ap_start_reg );

    SC_METHOD(thread_grp_traceback_fu_187_ap_start);
    sensitive << ( grp_traceback_fu_187_ap_start_reg );

    SC_METHOD(thread_i_3_fu_277_p2);
    sensitive << ( i_1_reg_162 );

    SC_METHOD(thread_i_fu_248_p2);
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_icmp_ln25_fu_216_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_icmp_ln27_fu_242_p2);
    sensitive << ( seq1_q0 );
    sensitive << ( icmp_ln25_reg_296 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_icmp_ln33_fu_259_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_1_reg_162 );

    SC_METHOD(thread_icmp_ln35_fu_271_p2);
    sensitive << ( seq2_q0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_l);
    sensitive << ( grp_traceback_fu_187_ap_done );
    sensitive << ( grp_traceback_fu_187_ap_return );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_l_ap_vld);
    sensitive << ( grp_traceback_fu_187_ap_done );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_m);
    sensitive << ( m_local_0_reg_174 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_ap_vld);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mul_ln26_fu_231_p0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( mul_ln26_fu_231_p00 );

    SC_METHOD(thread_mul_ln26_fu_231_p00);
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_mul_ln26_fu_231_p2);
    sensitive << ( mul_ln26_fu_231_p0 );

    SC_METHOD(thread_n);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln25_reg_296 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln27_fu_242_p2 );
    sensitive << ( zext_ln25_fu_254_p1 );

    SC_METHOD(thread_n_ap_vld);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln25_reg_296 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln27_fu_242_p2 );

    SC_METHOD(thread_seq1_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_seq1_address0 );
    sensitive << ( grp_align_fu_203_seq1_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln26_fu_222_p1 );

    SC_METHOD(thread_seq1_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_seq1_ce0 );
    sensitive << ( grp_align_fu_203_seq1_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_seq2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_seq2_address0 );
    sensitive << ( grp_align_fu_203_seq2_address0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln34_fu_265_p1 );

    SC_METHOD(thread_seq2_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_traceback_fu_187_seq2_ce0 );
    sensitive << ( grp_align_fu_203_seq2_ce0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_zext_ln25_fu_254_p1);
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_zext_ln26_2_fu_237_p1);
    sensitive << ( mul_ln26_fu_231_p2 );

    SC_METHOD(thread_zext_ln26_fu_222_p1);
    sensitive << ( i_0_reg_137 );

    SC_METHOD(thread_zext_ln34_fu_265_p1);
    sensitive << ( i_1_reg_162 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln25_reg_296 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln27_fu_242_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln33_fu_259_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln35_fu_271_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_align_fu_203_ap_done );
    sensitive << ( grp_traceback_fu_187_ap_done );
    sensitive << ( ap_CS_fsm_state9 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000001";
    grp_traceback_fu_187_ap_start_reg = SC_LOGIC_0;
    grp_align_fu_203_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "SmithWaterman_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, seq1_address0, "(port)seq1_address0");
    sc_trace(mVcdFile, seq1_ce0, "(port)seq1_ce0");
    sc_trace(mVcdFile, seq1_q0, "(port)seq1_q0");
    sc_trace(mVcdFile, seq2_address0, "(port)seq2_address0");
    sc_trace(mVcdFile, seq2_ce0, "(port)seq2_ce0");
    sc_trace(mVcdFile, seq2_q0, "(port)seq2_q0");
    sc_trace(mVcdFile, aligned_seq1_address0, "(port)aligned_seq1_address0");
    sc_trace(mVcdFile, aligned_seq1_ce0, "(port)aligned_seq1_ce0");
    sc_trace(mVcdFile, aligned_seq1_we0, "(port)aligned_seq1_we0");
    sc_trace(mVcdFile, aligned_seq1_d0, "(port)aligned_seq1_d0");
    sc_trace(mVcdFile, aligned_seq1_q0, "(port)aligned_seq1_q0");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, n_ap_vld, "(port)n_ap_vld");
    sc_trace(mVcdFile, aligned_seq2_address0, "(port)aligned_seq2_address0");
    sc_trace(mVcdFile, aligned_seq2_ce0, "(port)aligned_seq2_ce0");
    sc_trace(mVcdFile, aligned_seq2_we0, "(port)aligned_seq2_we0");
    sc_trace(mVcdFile, aligned_seq2_d0, "(port)aligned_seq2_d0");
    sc_trace(mVcdFile, aligned_seq2_q0, "(port)aligned_seq2_q0");
    sc_trace(mVcdFile, m, "(port)m");
    sc_trace(mVcdFile, m_ap_vld, "(port)m_ap_vld");
    sc_trace(mVcdFile, l, "(port)l");
    sc_trace(mVcdFile, l_ap_vld, "(port)l_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, icmp_ln25_fu_216_p2, "icmp_ln25_fu_216_p2");
    sc_trace(mVcdFile, icmp_ln25_reg_296, "icmp_ln25_reg_296");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_248_p2, "i_fu_248_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln27_fu_242_p2, "icmp_ln27_fu_242_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln33_fu_259_p2, "icmp_ln33_fu_259_p2");
    sc_trace(mVcdFile, i_3_fu_277_p2, "i_3_fu_277_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln35_fu_271_p2, "icmp_ln35_fu_271_p2");
    sc_trace(mVcdFile, pos_0_reg_329, "pos_0_reg_329");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_align_fu_203_ap_ready, "grp_align_fu_203_ap_ready");
    sc_trace(mVcdFile, grp_align_fu_203_ap_done, "grp_align_fu_203_ap_done");
    sc_trace(mVcdFile, pos_1_reg_334, "pos_1_reg_334");
    sc_trace(mVcdFile, H_address0, "H_address0");
    sc_trace(mVcdFile, H_ce0, "H_ce0");
    sc_trace(mVcdFile, H_we0, "H_we0");
    sc_trace(mVcdFile, H_q0, "H_q0");
    sc_trace(mVcdFile, H_address1, "H_address1");
    sc_trace(mVcdFile, H_ce1, "H_ce1");
    sc_trace(mVcdFile, H_we1, "H_we1");
    sc_trace(mVcdFile, H_q1, "H_q1");
    sc_trace(mVcdFile, grp_traceback_fu_187_ap_start, "grp_traceback_fu_187_ap_start");
    sc_trace(mVcdFile, grp_traceback_fu_187_ap_done, "grp_traceback_fu_187_ap_done");
    sc_trace(mVcdFile, grp_traceback_fu_187_ap_idle, "grp_traceback_fu_187_ap_idle");
    sc_trace(mVcdFile, grp_traceback_fu_187_ap_ready, "grp_traceback_fu_187_ap_ready");
    sc_trace(mVcdFile, grp_traceback_fu_187_seq1_address0, "grp_traceback_fu_187_seq1_address0");
    sc_trace(mVcdFile, grp_traceback_fu_187_seq1_ce0, "grp_traceback_fu_187_seq1_ce0");
    sc_trace(mVcdFile, grp_traceback_fu_187_seq2_address0, "grp_traceback_fu_187_seq2_address0");
    sc_trace(mVcdFile, grp_traceback_fu_187_seq2_ce0, "grp_traceback_fu_187_seq2_ce0");
    sc_trace(mVcdFile, grp_traceback_fu_187_H_address0, "grp_traceback_fu_187_H_address0");
    sc_trace(mVcdFile, grp_traceback_fu_187_H_ce0, "grp_traceback_fu_187_H_ce0");
    sc_trace(mVcdFile, grp_traceback_fu_187_H_address1, "grp_traceback_fu_187_H_address1");
    sc_trace(mVcdFile, grp_traceback_fu_187_H_ce1, "grp_traceback_fu_187_H_ce1");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq1_address0, "grp_traceback_fu_187_aligned_seq1_address0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq1_ce0, "grp_traceback_fu_187_aligned_seq1_ce0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq1_we0, "grp_traceback_fu_187_aligned_seq1_we0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq1_d0, "grp_traceback_fu_187_aligned_seq1_d0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq2_address0, "grp_traceback_fu_187_aligned_seq2_address0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq2_ce0, "grp_traceback_fu_187_aligned_seq2_ce0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq2_we0, "grp_traceback_fu_187_aligned_seq2_we0");
    sc_trace(mVcdFile, grp_traceback_fu_187_aligned_seq2_d0, "grp_traceback_fu_187_aligned_seq2_d0");
    sc_trace(mVcdFile, grp_traceback_fu_187_ap_return, "grp_traceback_fu_187_ap_return");
    sc_trace(mVcdFile, grp_align_fu_203_ap_start, "grp_align_fu_203_ap_start");
    sc_trace(mVcdFile, grp_align_fu_203_ap_idle, "grp_align_fu_203_ap_idle");
    sc_trace(mVcdFile, grp_align_fu_203_seq1_address0, "grp_align_fu_203_seq1_address0");
    sc_trace(mVcdFile, grp_align_fu_203_seq1_ce0, "grp_align_fu_203_seq1_ce0");
    sc_trace(mVcdFile, grp_align_fu_203_seq2_address0, "grp_align_fu_203_seq2_address0");
    sc_trace(mVcdFile, grp_align_fu_203_seq2_ce0, "grp_align_fu_203_seq2_ce0");
    sc_trace(mVcdFile, grp_align_fu_203_H_address0, "grp_align_fu_203_H_address0");
    sc_trace(mVcdFile, grp_align_fu_203_H_ce0, "grp_align_fu_203_H_ce0");
    sc_trace(mVcdFile, grp_align_fu_203_H_address1, "grp_align_fu_203_H_address1");
    sc_trace(mVcdFile, grp_align_fu_203_H_ce1, "grp_align_fu_203_H_ce1");
    sc_trace(mVcdFile, grp_align_fu_203_H_we1, "grp_align_fu_203_H_we1");
    sc_trace(mVcdFile, grp_align_fu_203_H_d1, "grp_align_fu_203_H_d1");
    sc_trace(mVcdFile, grp_align_fu_203_ap_return_0, "grp_align_fu_203_ap_return_0");
    sc_trace(mVcdFile, grp_align_fu_203_ap_return_1, "grp_align_fu_203_ap_return_1");
    sc_trace(mVcdFile, i_0_reg_137, "i_0_reg_137");
    sc_trace(mVcdFile, n_load_reg_149, "n_load_reg_149");
    sc_trace(mVcdFile, i_1_reg_162, "i_1_reg_162");
    sc_trace(mVcdFile, m_local_0_reg_174, "m_local_0_reg_174");
    sc_trace(mVcdFile, grp_traceback_fu_187_ap_start_reg, "grp_traceback_fu_187_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_align_fu_203_ap_start_reg, "grp_align_fu_203_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, zext_ln26_fu_222_p1, "zext_ln26_fu_222_p1");
    sc_trace(mVcdFile, zext_ln26_2_fu_237_p1, "zext_ln26_2_fu_237_p1");
    sc_trace(mVcdFile, zext_ln34_fu_265_p1, "zext_ln34_fu_265_p1");
    sc_trace(mVcdFile, zext_ln25_fu_254_p1, "zext_ln25_fu_254_p1");
    sc_trace(mVcdFile, mul_ln26_fu_231_p0, "mul_ln26_fu_231_p0");
    sc_trace(mVcdFile, mul_ln26_fu_231_p2, "mul_ln26_fu_231_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln26_fu_231_p00, "mul_ln26_fu_231_p00");
#endif

    }
    mHdltvinHandle.open("SmithWaterman.hdltvin.dat");
    mHdltvoutHandle.open("SmithWaterman.hdltvout.dat");
}

SmithWaterman::~SmithWaterman() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete H_U;
    delete grp_traceback_fu_187;
    delete grp_align_fu_203;
}

void SmithWaterman::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void SmithWaterman::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_align_fu_203_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            grp_align_fu_203_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_align_fu_203_ap_ready.read())) {
            grp_align_fu_203_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_traceback_fu_187_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            grp_traceback_fu_187_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_traceback_fu_187_ap_ready.read())) {
            grp_traceback_fu_187_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln27_fu_242_p2.read(), ap_const_lv1_0))) {
        i_0_reg_137 = i_fu_248_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_137 = ap_const_lv7_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_271_p2.read()))) {
        i_1_reg_162 = i_3_fu_277_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_242_p2.read()) || 
                 esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_0)))) {
        i_1_reg_162 = ap_const_lv7_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_259_p2.read()))) {
        m_local_0_reg_174 = ap_const_lv7_64;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln35_fu_271_p2.read()))) {
        m_local_0_reg_174 = i_1_reg_162.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_fu_216_p2.read(), ap_const_lv1_0))) {
        n_load_reg_149 = ap_const_lv7_64;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_242_p2.read()))) {
        n_load_reg_149 = i_0_reg_137.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        icmp_ln25_reg_296 = icmp_ln25_fu_216_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_align_fu_203_ap_done.read(), ap_const_logic_1))) {
        pos_0_reg_329 = grp_align_fu_203_ap_return_0.read();
        pos_1_reg_334 = grp_align_fu_203_ap_return_1.read();
    }
}

void SmithWaterman::thread_H_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        H_address0 =  (sc_lv<14>) (zext_ln34_fu_265_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        H_address0 =  (sc_lv<14>) (zext_ln26_2_fu_237_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        H_address0 =  (sc_lv<14>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        H_address0 = grp_align_fu_203_H_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        H_address0 = grp_traceback_fu_187_H_address0.read();
    } else {
        H_address0 = "XXXXXXXXXXXXXX";
    }
}

void SmithWaterman::thread_H_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        H_address1 = grp_align_fu_203_H_address1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        H_address1 = grp_traceback_fu_187_H_address1.read();
    } else {
        H_address1 = "XXXXXXXXXXXXXX";
    }
}

void SmithWaterman::thread_H_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        H_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        H_ce0 = grp_align_fu_203_H_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        H_ce0 = grp_traceback_fu_187_H_ce0.read();
    } else {
        H_ce0 = ap_const_logic_0;
    }
}

void SmithWaterman::thread_H_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        H_ce1 = grp_align_fu_203_H_ce1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        H_ce1 = grp_traceback_fu_187_H_ce1.read();
    } else {
        H_ce1 = ap_const_logic_0;
    }
}

void SmithWaterman::thread_H_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln33_fu_259_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_1)))) {
        H_we0 = ap_const_logic_1;
    } else {
        H_we0 = ap_const_logic_0;
    }
}

void SmithWaterman::thread_H_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        H_we1 = grp_align_fu_203_H_we1.read();
    } else {
        H_we1 = ap_const_logic_0;
    }
}

void SmithWaterman::thread_aligned_seq1_address0() {
    aligned_seq1_address0 = grp_traceback_fu_187_aligned_seq1_address0.read();
}

void SmithWaterman::thread_aligned_seq1_ce0() {
    aligned_seq1_ce0 = grp_traceback_fu_187_aligned_seq1_ce0.read();
}

void SmithWaterman::thread_aligned_seq1_d0() {
    aligned_seq1_d0 = grp_traceback_fu_187_aligned_seq1_d0.read();
}

void SmithWaterman::thread_aligned_seq1_we0() {
    aligned_seq1_we0 = grp_traceback_fu_187_aligned_seq1_we0.read();
}

void SmithWaterman::thread_aligned_seq2_address0() {
    aligned_seq2_address0 = grp_traceback_fu_187_aligned_seq2_address0.read();
}

void SmithWaterman::thread_aligned_seq2_ce0() {
    aligned_seq2_ce0 = grp_traceback_fu_187_aligned_seq2_ce0.read();
}

void SmithWaterman::thread_aligned_seq2_d0() {
    aligned_seq2_d0 = grp_traceback_fu_187_aligned_seq2_d0.read();
}

void SmithWaterman::thread_aligned_seq2_we0() {
    aligned_seq2_we0 = grp_traceback_fu_187_aligned_seq2_we0.read();
}

void SmithWaterman::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void SmithWaterman::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void SmithWaterman::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void SmithWaterman::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void SmithWaterman::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void SmithWaterman::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void SmithWaterman::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void SmithWaterman::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void SmithWaterman::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void SmithWaterman::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_traceback_fu_187_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void SmithWaterman::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void SmithWaterman::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_traceback_fu_187_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void SmithWaterman::thread_grp_align_fu_203_ap_start() {
    grp_align_fu_203_ap_start = grp_align_fu_203_ap_start_reg.read();
}

void SmithWaterman::thread_grp_traceback_fu_187_ap_start() {
    grp_traceback_fu_187_ap_start = grp_traceback_fu_187_ap_start_reg.read();
}

void SmithWaterman::thread_i_3_fu_277_p2() {
    i_3_fu_277_p2 = (!i_1_reg_162.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_1_reg_162.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void SmithWaterman::thread_i_fu_248_p2() {
    i_fu_248_p2 = (!i_0_reg_137.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_137.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void SmithWaterman::thread_icmp_ln25_fu_216_p2() {
    icmp_ln25_fu_216_p2 = (!i_0_reg_137.read().is_01() || !ap_const_lv7_65.is_01())? sc_lv<1>(): (sc_biguint<7>(i_0_reg_137.read()) < sc_biguint<7>(ap_const_lv7_65));
}

void SmithWaterman::thread_icmp_ln27_fu_242_p2() {
    icmp_ln27_fu_242_p2 = (!seq1_q0.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(seq1_q0.read() == ap_const_lv8_0);
}

void SmithWaterman::thread_icmp_ln33_fu_259_p2() {
    icmp_ln33_fu_259_p2 = (!i_1_reg_162.read().is_01() || !ap_const_lv7_65.is_01())? sc_lv<1>(): (sc_biguint<7>(i_1_reg_162.read()) < sc_biguint<7>(ap_const_lv7_65));
}

void SmithWaterman::thread_icmp_ln35_fu_271_p2() {
    icmp_ln35_fu_271_p2 = (!seq2_q0.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(seq2_q0.read() == ap_const_lv8_0);
}

void SmithWaterman::thread_l() {
    l = grp_traceback_fu_187_ap_return.read();
}

void SmithWaterman::thread_l_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(grp_traceback_fu_187_ap_done.read(), ap_const_logic_1))) {
        l_ap_vld = ap_const_logic_1;
    } else {
        l_ap_vld = ap_const_logic_0;
    }
}

void SmithWaterman::thread_m() {
    m = esl_zext<32,7>(m_local_0_reg_174.read());
}

void SmithWaterman::thread_m_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        m_ap_vld = ap_const_logic_1;
    } else {
        m_ap_vld = ap_const_logic_0;
    }
}

void SmithWaterman::thread_mul_ln26_fu_231_p0() {
    mul_ln26_fu_231_p0 =  (sc_lv<7>) (mul_ln26_fu_231_p00.read());
}

void SmithWaterman::thread_mul_ln26_fu_231_p00() {
    mul_ln26_fu_231_p00 = esl_zext<15,7>(i_0_reg_137.read());
}

void SmithWaterman::thread_mul_ln26_fu_231_p2() {
    mul_ln26_fu_231_p2 = (!mul_ln26_fu_231_p0.read().is_01() || !ap_const_lv15_65.is_01())? sc_lv<15>(): sc_biguint<7>(mul_ln26_fu_231_p0.read()) * sc_biguint<15>(ap_const_lv15_65);
}

void SmithWaterman::thread_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_242_p2.read()))) {
        n = zext_ln25_fu_254_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        n = ap_const_lv32_64;
    } else {
        n =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void SmithWaterman::thread_n_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_242_p2.read())))) {
        n_ap_vld = ap_const_logic_1;
    } else {
        n_ap_vld = ap_const_logic_0;
    }
}

void SmithWaterman::thread_seq1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        seq1_address0 =  (sc_lv<7>) (zext_ln26_fu_222_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        seq1_address0 = grp_align_fu_203_seq1_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        seq1_address0 = grp_traceback_fu_187_seq1_address0.read();
    } else {
        seq1_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void SmithWaterman::thread_seq1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        seq1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        seq1_ce0 = grp_align_fu_203_seq1_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        seq1_ce0 = grp_traceback_fu_187_seq1_ce0.read();
    } else {
        seq1_ce0 = ap_const_logic_0;
    }
}

void SmithWaterman::thread_seq2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        seq2_address0 =  (sc_lv<7>) (zext_ln34_fu_265_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        seq2_address0 = grp_align_fu_203_seq2_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        seq2_address0 = grp_traceback_fu_187_seq2_address0.read();
    } else {
        seq2_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void SmithWaterman::thread_seq2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        seq2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        seq2_ce0 = grp_align_fu_203_seq2_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        seq2_ce0 = grp_traceback_fu_187_seq2_ce0.read();
    } else {
        seq2_ce0 = ap_const_logic_0;
    }
}

void SmithWaterman::thread_zext_ln25_fu_254_p1() {
    zext_ln25_fu_254_p1 = esl_zext<32,7>(i_0_reg_137.read());
}

void SmithWaterman::thread_zext_ln26_2_fu_237_p1() {
    zext_ln26_2_fu_237_p1 = esl_zext<64,15>(mul_ln26_fu_231_p2.read());
}

void SmithWaterman::thread_zext_ln26_fu_222_p1() {
    zext_ln26_fu_222_p1 = esl_zext<64,7>(i_0_reg_137.read());
}

void SmithWaterman::thread_zext_ln34_fu_265_p1() {
    zext_ln34_fu_265_p1 = esl_zext<64,7>(i_1_reg_162.read());
}

void SmithWaterman::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln27_fu_242_p2.read()) || 
  esl_seteq<1,1,1>(icmp_ln25_reg_296.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_259_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_271_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(grp_align_fu_203_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(grp_traceback_fu_187_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void SmithWaterman::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"seq1_address0\" :  \"" << seq1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"seq1_ce0\" :  \"" << seq1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"seq1_q0\" :  \"" << seq1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"seq2_address0\" :  \"" << seq2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"seq2_ce0\" :  \"" << seq2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"seq2_q0\" :  \"" << seq2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq1_address0\" :  \"" << aligned_seq1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq1_ce0\" :  \"" << aligned_seq1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq1_we0\" :  \"" << aligned_seq1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq1_d0\" :  \"" << aligned_seq1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"aligned_seq1_q0\" :  \"" << aligned_seq1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"n_ap_vld\" :  \"" << n_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq2_address0\" :  \"" << aligned_seq2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq2_ce0\" :  \"" << aligned_seq2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq2_we0\" :  \"" << aligned_seq2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"aligned_seq2_d0\" :  \"" << aligned_seq2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"aligned_seq2_q0\" :  \"" << aligned_seq2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m\" :  \"" << m.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"m_ap_vld\" :  \"" << m_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"l\" :  \"" << l.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"l_ap_vld\" :  \"" << l_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

