// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _SmithWaterman_HH_
#define _SmithWaterman_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "traceback.h"
#include "align.h"
#include "SmithWaterman_H.h"

namespace ap_rtl {

struct SmithWaterman : public sc_module {
    // Port declarations 28
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > seq1_address0;
    sc_out< sc_logic > seq1_ce0;
    sc_in< sc_lv<8> > seq1_q0;
    sc_out< sc_lv<7> > seq2_address0;
    sc_out< sc_logic > seq2_ce0;
    sc_in< sc_lv<8> > seq2_q0;
    sc_out< sc_lv<7> > aligned_seq1_address0;
    sc_out< sc_logic > aligned_seq1_ce0;
    sc_out< sc_logic > aligned_seq1_we0;
    sc_out< sc_lv<8> > aligned_seq1_d0;
    sc_in< sc_lv<8> > aligned_seq1_q0;
    sc_out< sc_lv<32> > n;
    sc_out< sc_logic > n_ap_vld;
    sc_out< sc_lv<7> > aligned_seq2_address0;
    sc_out< sc_logic > aligned_seq2_ce0;
    sc_out< sc_logic > aligned_seq2_we0;
    sc_out< sc_lv<8> > aligned_seq2_d0;
    sc_in< sc_lv<8> > aligned_seq2_q0;
    sc_out< sc_lv<32> > m;
    sc_out< sc_logic > m_ap_vld;
    sc_out< sc_lv<32> > l;
    sc_out< sc_logic > l_ap_vld;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    SmithWaterman(sc_module_name name);
    SC_HAS_PROCESS(SmithWaterman);

    ~SmithWaterman();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    SmithWaterman_H* H_U;
    traceback* grp_traceback_fu_187;
    align* grp_align_fu_203;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln25_fu_216_p2;
    sc_signal< sc_lv<1> > icmp_ln25_reg_296;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<7> > i_fu_248_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln27_fu_242_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln33_fu_259_p2;
    sc_signal< sc_lv<7> > i_3_fu_277_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln35_fu_271_p2;
    sc_signal< sc_lv<32> > pos_0_reg_329;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_align_fu_203_ap_ready;
    sc_signal< sc_logic > grp_align_fu_203_ap_done;
    sc_signal< sc_lv<32> > pos_1_reg_334;
    sc_signal< sc_lv<14> > H_address0;
    sc_signal< sc_logic > H_ce0;
    sc_signal< sc_logic > H_we0;
    sc_signal< sc_lv<32> > H_q0;
    sc_signal< sc_lv<14> > H_address1;
    sc_signal< sc_logic > H_ce1;
    sc_signal< sc_logic > H_we1;
    sc_signal< sc_lv<32> > H_q1;
    sc_signal< sc_logic > grp_traceback_fu_187_ap_start;
    sc_signal< sc_logic > grp_traceback_fu_187_ap_done;
    sc_signal< sc_logic > grp_traceback_fu_187_ap_idle;
    sc_signal< sc_logic > grp_traceback_fu_187_ap_ready;
    sc_signal< sc_lv<7> > grp_traceback_fu_187_seq1_address0;
    sc_signal< sc_logic > grp_traceback_fu_187_seq1_ce0;
    sc_signal< sc_lv<7> > grp_traceback_fu_187_seq2_address0;
    sc_signal< sc_logic > grp_traceback_fu_187_seq2_ce0;
    sc_signal< sc_lv<14> > grp_traceback_fu_187_H_address0;
    sc_signal< sc_logic > grp_traceback_fu_187_H_ce0;
    sc_signal< sc_lv<14> > grp_traceback_fu_187_H_address1;
    sc_signal< sc_logic > grp_traceback_fu_187_H_ce1;
    sc_signal< sc_lv<7> > grp_traceback_fu_187_aligned_seq1_address0;
    sc_signal< sc_logic > grp_traceback_fu_187_aligned_seq1_ce0;
    sc_signal< sc_logic > grp_traceback_fu_187_aligned_seq1_we0;
    sc_signal< sc_lv<8> > grp_traceback_fu_187_aligned_seq1_d0;
    sc_signal< sc_lv<7> > grp_traceback_fu_187_aligned_seq2_address0;
    sc_signal< sc_logic > grp_traceback_fu_187_aligned_seq2_ce0;
    sc_signal< sc_logic > grp_traceback_fu_187_aligned_seq2_we0;
    sc_signal< sc_lv<8> > grp_traceback_fu_187_aligned_seq2_d0;
    sc_signal< sc_lv<32> > grp_traceback_fu_187_ap_return;
    sc_signal< sc_logic > grp_align_fu_203_ap_start;
    sc_signal< sc_logic > grp_align_fu_203_ap_idle;
    sc_signal< sc_lv<7> > grp_align_fu_203_seq1_address0;
    sc_signal< sc_logic > grp_align_fu_203_seq1_ce0;
    sc_signal< sc_lv<7> > grp_align_fu_203_seq2_address0;
    sc_signal< sc_logic > grp_align_fu_203_seq2_ce0;
    sc_signal< sc_lv<14> > grp_align_fu_203_H_address0;
    sc_signal< sc_logic > grp_align_fu_203_H_ce0;
    sc_signal< sc_lv<14> > grp_align_fu_203_H_address1;
    sc_signal< sc_logic > grp_align_fu_203_H_ce1;
    sc_signal< sc_logic > grp_align_fu_203_H_we1;
    sc_signal< sc_lv<32> > grp_align_fu_203_H_d1;
    sc_signal< sc_lv<32> > grp_align_fu_203_ap_return_0;
    sc_signal< sc_lv<32> > grp_align_fu_203_ap_return_1;
    sc_signal< sc_lv<7> > i_0_reg_137;
    sc_signal< sc_lv<7> > n_load_reg_149;
    sc_signal< sc_lv<7> > i_1_reg_162;
    sc_signal< sc_lv<7> > m_local_0_reg_174;
    sc_signal< sc_logic > grp_traceback_fu_187_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_align_fu_203_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln26_fu_222_p1;
    sc_signal< sc_lv<64> > zext_ln26_2_fu_237_p1;
    sc_signal< sc_lv<64> > zext_ln34_fu_265_p1;
    sc_signal< sc_lv<32> > zext_ln25_fu_254_p1;
    sc_signal< sc_lv<7> > mul_ln26_fu_231_p0;
    sc_signal< sc_lv<15> > mul_ln26_fu_231_p2;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_lv<15> > mul_ln26_fu_231_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_64;
    static const sc_lv<7> ap_const_lv7_65;
    static const sc_lv<15> ap_const_lv15_65;
    static const sc_lv<8> ap_const_lv8_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_H_address0();
    void thread_H_address1();
    void thread_H_ce0();
    void thread_H_ce1();
    void thread_H_we0();
    void thread_H_we1();
    void thread_aligned_seq1_address0();
    void thread_aligned_seq1_ce0();
    void thread_aligned_seq1_d0();
    void thread_aligned_seq1_we0();
    void thread_aligned_seq2_address0();
    void thread_aligned_seq2_ce0();
    void thread_aligned_seq2_d0();
    void thread_aligned_seq2_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_align_fu_203_ap_start();
    void thread_grp_traceback_fu_187_ap_start();
    void thread_i_3_fu_277_p2();
    void thread_i_fu_248_p2();
    void thread_icmp_ln25_fu_216_p2();
    void thread_icmp_ln27_fu_242_p2();
    void thread_icmp_ln33_fu_259_p2();
    void thread_icmp_ln35_fu_271_p2();
    void thread_l();
    void thread_l_ap_vld();
    void thread_m();
    void thread_m_ap_vld();
    void thread_mul_ln26_fu_231_p0();
    void thread_mul_ln26_fu_231_p00();
    void thread_mul_ln26_fu_231_p2();
    void thread_n();
    void thread_n_ap_vld();
    void thread_seq1_address0();
    void thread_seq1_ce0();
    void thread_seq2_address0();
    void thread_seq2_ce0();
    void thread_zext_ln25_fu_254_p1();
    void thread_zext_ln26_2_fu_237_p1();
    void thread_zext_ln26_fu_222_p1();
    void thread_zext_ln34_fu_265_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
