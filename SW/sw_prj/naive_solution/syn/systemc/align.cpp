// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "align.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic align::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic align::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> align::ap_ST_fsm_state1 = "1";
const sc_lv<5> align::ap_ST_fsm_state2 = "10";
const sc_lv<5> align::ap_ST_fsm_state3 = "100";
const sc_lv<5> align::ap_ST_fsm_state4 = "1000";
const sc_lv<5> align::ap_ST_fsm_state5 = "10000";
const sc_lv<32> align::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> align::ap_const_lv32_1 = "1";
const sc_lv<1> align::ap_const_lv1_0 = "0";
const sc_lv<32> align::ap_const_lv32_2 = "10";
const sc_lv<1> align::ap_const_lv1_1 = "1";
const sc_lv<32> align::ap_const_lv32_3 = "11";
const sc_lv<7> align::ap_const_lv7_1 = "1";
const sc_lv<32> align::ap_const_lv32_4 = "100";
const sc_lv<7> align::ap_const_lv7_7F = "1111111";
const sc_lv<14> align::ap_const_lv14_65 = "1100101";
const sc_lv<32> align::ap_const_lv32_FFFFFFFD = "11111111111111111111111111111101";
const sc_lv<31> align::ap_const_lv31_3 = "11";
const sc_lv<31> align::ap_const_lv31_7FFFFFFD = "1111111111111111111111111111101";
const sc_lv<32> align::ap_const_lv32_FFFFFFFE = "11111111111111111111111111111110";
const sc_lv<31> align::ap_const_lv31_0 = "0000000000000000000000000000000";
const bool align::ap_const_boolean_1 = true;

align::align(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_H_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln91_4_fu_269_p1 );
    sensitive << ( zext_ln99_1_fu_354_p1 );

    SC_METHOD(thread_H_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( zext_ln98_1_fu_279_p1 );
    sensitive << ( zext_ln100_fu_393_p1 );

    SC_METHOD(thread_H_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_H_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_H_d1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( max_score_fu_408_p3 );

    SC_METHOD(thread_H_we1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_add_ln100_fu_293_p2);
    sensitive << ( mul_ln98_reg_509 );
    sensitive << ( zext_ln99_fu_284_p1 );

    SC_METHOD(thread_add_ln91_1_fu_249_p2);
    sensitive << ( j_0_reg_156 );

    SC_METHOD(thread_add_ln91_2_fu_264_p2);
    sensitive << ( mul_ln91_reg_498 );
    sensitive << ( zext_ln91_3_fu_260_p1 );

    SC_METHOD(thread_add_ln91_fu_197_p2);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_add_ln92_1_fu_342_p2);
    sensitive << ( trunc_ln92_fu_332_p1 );
    sensitive << ( select_ln92_1_fu_324_p3 );

    SC_METHOD(thread_add_ln98_fu_274_p2);
    sensitive << ( mul_ln98_reg_509 );
    sensitive << ( zext_ln91_3_fu_260_p1 );

    SC_METHOD(thread_add_ln99_fu_288_p2);
    sensitive << ( mul_ln91_reg_498 );
    sensitive << ( zext_ln99_fu_284_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_192_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_192_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_192_p2 );
    sensitive << ( pos_0_0_fu_62 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_192_p2 );
    sensitive << ( pos_1_0_fu_58 );

    SC_METHOD(thread_diag_score_2_fu_336_p2);
    sensitive << ( H_q0 );
    sensitive << ( select_ln92_fu_316_p3 );

    SC_METHOD(thread_down_score_fu_397_p2);
    sensitive << ( H_q0 );

    SC_METHOD(thread_i_fu_304_p2);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_icmp_ln102_fu_416_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( max_score_0_fu_54 );
    sensitive << ( max_score_fu_408_p3 );

    SC_METHOD(thread_icmp_ln51_fu_358_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( diag_score_2_fu_336_p2 );

    SC_METHOD(thread_icmp_ln54_fu_376_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln51_fu_372_p1 );
    sensitive << ( right_score_fu_348_p2 );

    SC_METHOD(thread_icmp_ln57_fu_403_p2);
    sensitive << ( max_1_reg_563 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( down_score_fu_397_p2 );

    SC_METHOD(thread_icmp_ln89_fu_192_p2);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_icmp_ln90_fu_244_p2);
    sensitive << ( m );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_156 );

    SC_METHOD(thread_icmp_ln92_fu_310_p2);
    sensitive << ( seq1_q0 );
    sensitive << ( seq2_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_j_fu_298_p2);
    sensitive << ( j_0_reg_156 );

    SC_METHOD(thread_max_1_fu_382_p3);
    sensitive << ( zext_ln51_fu_372_p1 );
    sensitive << ( right_score_fu_348_p2 );
    sensitive << ( icmp_ln54_fu_376_p2 );

    SC_METHOD(thread_max_score_fu_408_p3);
    sensitive << ( max_1_reg_563 );
    sensitive << ( down_score_fu_397_p2 );
    sensitive << ( icmp_ln57_fu_403_p2 );

    SC_METHOD(thread_mul_ln91_fu_212_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln91_fu_212_p00 );

    SC_METHOD(thread_mul_ln91_fu_212_p00);
    sensitive << ( add_ln91_fu_197_p2 );

    SC_METHOD(thread_mul_ln91_fu_212_p2);
    sensitive << ( mul_ln91_fu_212_p0 );

    SC_METHOD(thread_mul_ln98_fu_222_p0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln98_fu_222_p00 );

    SC_METHOD(thread_mul_ln98_fu_222_p00);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_mul_ln98_fu_222_p2);
    sensitive << ( mul_ln98_fu_222_p0 );

    SC_METHOD(thread_right_score_fu_348_p2);
    sensitive << ( H_q1 );

    SC_METHOD(thread_select_ln102_1_fu_429_p3);
    sensitive << ( zext_ln90_reg_515 );
    sensitive << ( pos_1_0_fu_58 );
    sensitive << ( icmp_ln102_fu_416_p2 );

    SC_METHOD(thread_select_ln102_2_fu_436_p3);
    sensitive << ( max_score_0_fu_54 );
    sensitive << ( max_score_fu_408_p3 );
    sensitive << ( icmp_ln102_fu_416_p2 );

    SC_METHOD(thread_select_ln102_fu_422_p3);
    sensitive << ( zext_ln89_reg_490 );
    sensitive << ( pos_0_0_fu_62 );
    sensitive << ( icmp_ln102_fu_416_p2 );

    SC_METHOD(thread_select_ln51_fu_364_p3);
    sensitive << ( icmp_ln51_fu_358_p2 );
    sensitive << ( add_ln92_1_fu_342_p2 );

    SC_METHOD(thread_select_ln92_1_fu_324_p3);
    sensitive << ( icmp_ln92_fu_310_p2 );

    SC_METHOD(thread_select_ln92_fu_316_p3);
    sensitive << ( icmp_ln92_fu_310_p2 );

    SC_METHOD(thread_seq1_address0);
    sensitive << ( seq1_addr_reg_504 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_seq1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_seq2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln91_1_fu_255_p1 );

    SC_METHOD(thread_seq2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_trunc_ln92_fu_332_p1);
    sensitive << ( H_q0 );

    SC_METHOD(thread_zext_ln100_fu_393_p1);
    sensitive << ( add_ln100_reg_543 );

    SC_METHOD(thread_zext_ln51_fu_372_p1);
    sensitive << ( select_ln51_fu_364_p3 );

    SC_METHOD(thread_zext_ln89_fu_188_p1);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_zext_ln90_fu_240_p1);
    sensitive << ( j_0_reg_156 );

    SC_METHOD(thread_zext_ln91_1_fu_255_p1);
    sensitive << ( add_ln91_1_fu_249_p2 );

    SC_METHOD(thread_zext_ln91_3_fu_260_p1);
    sensitive << ( add_ln91_1_fu_249_p2 );

    SC_METHOD(thread_zext_ln91_4_fu_269_p1);
    sensitive << ( add_ln91_2_fu_264_p2 );

    SC_METHOD(thread_zext_ln91_fu_203_p1);
    sensitive << ( add_ln91_fu_197_p2 );

    SC_METHOD(thread_zext_ln98_1_fu_279_p1);
    sensitive << ( add_ln98_fu_274_p2 );

    SC_METHOD(thread_zext_ln99_1_fu_354_p1);
    sensitive << ( add_ln99_reg_538 );

    SC_METHOD(thread_zext_ln99_fu_284_p1);
    sensitive << ( j_0_reg_156 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln89_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln90_fu_244_p2 );

    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "align_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, seq1_address0, "(port)seq1_address0");
    sc_trace(mVcdFile, seq1_ce0, "(port)seq1_ce0");
    sc_trace(mVcdFile, seq1_q0, "(port)seq1_q0");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, seq2_address0, "(port)seq2_address0");
    sc_trace(mVcdFile, seq2_ce0, "(port)seq2_ce0");
    sc_trace(mVcdFile, seq2_q0, "(port)seq2_q0");
    sc_trace(mVcdFile, m, "(port)m");
    sc_trace(mVcdFile, H_address0, "(port)H_address0");
    sc_trace(mVcdFile, H_ce0, "(port)H_ce0");
    sc_trace(mVcdFile, H_q0, "(port)H_q0");
    sc_trace(mVcdFile, H_address1, "(port)H_address1");
    sc_trace(mVcdFile, H_ce1, "(port)H_ce1");
    sc_trace(mVcdFile, H_we1, "(port)H_we1");
    sc_trace(mVcdFile, H_d1, "(port)H_d1");
    sc_trace(mVcdFile, H_q1, "(port)H_q1");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln89_fu_188_p1, "zext_ln89_fu_188_p1");
    sc_trace(mVcdFile, zext_ln89_reg_490, "zext_ln89_reg_490");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, mul_ln91_fu_212_p2, "mul_ln91_fu_212_p2");
    sc_trace(mVcdFile, mul_ln91_reg_498, "mul_ln91_reg_498");
    sc_trace(mVcdFile, icmp_ln89_fu_192_p2, "icmp_ln89_fu_192_p2");
    sc_trace(mVcdFile, seq1_addr_reg_504, "seq1_addr_reg_504");
    sc_trace(mVcdFile, mul_ln98_fu_222_p2, "mul_ln98_fu_222_p2");
    sc_trace(mVcdFile, mul_ln98_reg_509, "mul_ln98_reg_509");
    sc_trace(mVcdFile, zext_ln90_fu_240_p1, "zext_ln90_fu_240_p1");
    sc_trace(mVcdFile, zext_ln90_reg_515, "zext_ln90_reg_515");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln90_fu_244_p2, "icmp_ln90_fu_244_p2");
    sc_trace(mVcdFile, add_ln99_fu_288_p2, "add_ln99_fu_288_p2");
    sc_trace(mVcdFile, add_ln99_reg_538, "add_ln99_reg_538");
    sc_trace(mVcdFile, add_ln100_fu_293_p2, "add_ln100_fu_293_p2");
    sc_trace(mVcdFile, add_ln100_reg_543, "add_ln100_reg_543");
    sc_trace(mVcdFile, j_fu_298_p2, "j_fu_298_p2");
    sc_trace(mVcdFile, j_reg_548, "j_reg_548");
    sc_trace(mVcdFile, i_fu_304_p2, "i_fu_304_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, max_1_fu_382_p3, "max_1_fu_382_p3");
    sc_trace(mVcdFile, max_1_reg_563, "max_1_reg_563");
    sc_trace(mVcdFile, i_0_reg_144, "i_0_reg_144");
    sc_trace(mVcdFile, j_0_reg_156, "j_0_reg_156");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, zext_ln91_fu_203_p1, "zext_ln91_fu_203_p1");
    sc_trace(mVcdFile, zext_ln91_4_fu_269_p1, "zext_ln91_4_fu_269_p1");
    sc_trace(mVcdFile, zext_ln98_1_fu_279_p1, "zext_ln98_1_fu_279_p1");
    sc_trace(mVcdFile, zext_ln91_1_fu_255_p1, "zext_ln91_1_fu_255_p1");
    sc_trace(mVcdFile, zext_ln99_1_fu_354_p1, "zext_ln99_1_fu_354_p1");
    sc_trace(mVcdFile, zext_ln100_fu_393_p1, "zext_ln100_fu_393_p1");
    sc_trace(mVcdFile, max_score_0_fu_54, "max_score_0_fu_54");
    sc_trace(mVcdFile, select_ln102_2_fu_436_p3, "select_ln102_2_fu_436_p3");
    sc_trace(mVcdFile, pos_1_0_fu_58, "pos_1_0_fu_58");
    sc_trace(mVcdFile, select_ln102_1_fu_429_p3, "select_ln102_1_fu_429_p3");
    sc_trace(mVcdFile, pos_0_0_fu_62, "pos_0_0_fu_62");
    sc_trace(mVcdFile, select_ln102_fu_422_p3, "select_ln102_fu_422_p3");
    sc_trace(mVcdFile, max_score_fu_408_p3, "max_score_fu_408_p3");
    sc_trace(mVcdFile, add_ln91_fu_197_p2, "add_ln91_fu_197_p2");
    sc_trace(mVcdFile, mul_ln91_fu_212_p0, "mul_ln91_fu_212_p0");
    sc_trace(mVcdFile, mul_ln98_fu_222_p0, "mul_ln98_fu_222_p0");
    sc_trace(mVcdFile, add_ln91_1_fu_249_p2, "add_ln91_1_fu_249_p2");
    sc_trace(mVcdFile, zext_ln91_3_fu_260_p1, "zext_ln91_3_fu_260_p1");
    sc_trace(mVcdFile, add_ln91_2_fu_264_p2, "add_ln91_2_fu_264_p2");
    sc_trace(mVcdFile, add_ln98_fu_274_p2, "add_ln98_fu_274_p2");
    sc_trace(mVcdFile, zext_ln99_fu_284_p1, "zext_ln99_fu_284_p1");
    sc_trace(mVcdFile, icmp_ln92_fu_310_p2, "icmp_ln92_fu_310_p2");
    sc_trace(mVcdFile, select_ln92_fu_316_p3, "select_ln92_fu_316_p3");
    sc_trace(mVcdFile, trunc_ln92_fu_332_p1, "trunc_ln92_fu_332_p1");
    sc_trace(mVcdFile, select_ln92_1_fu_324_p3, "select_ln92_1_fu_324_p3");
    sc_trace(mVcdFile, diag_score_2_fu_336_p2, "diag_score_2_fu_336_p2");
    sc_trace(mVcdFile, icmp_ln51_fu_358_p2, "icmp_ln51_fu_358_p2");
    sc_trace(mVcdFile, add_ln92_1_fu_342_p2, "add_ln92_1_fu_342_p2");
    sc_trace(mVcdFile, select_ln51_fu_364_p3, "select_ln51_fu_364_p3");
    sc_trace(mVcdFile, zext_ln51_fu_372_p1, "zext_ln51_fu_372_p1");
    sc_trace(mVcdFile, right_score_fu_348_p2, "right_score_fu_348_p2");
    sc_trace(mVcdFile, icmp_ln54_fu_376_p2, "icmp_ln54_fu_376_p2");
    sc_trace(mVcdFile, down_score_fu_397_p2, "down_score_fu_397_p2");
    sc_trace(mVcdFile, icmp_ln57_fu_403_p2, "icmp_ln57_fu_403_p2");
    sc_trace(mVcdFile, icmp_ln102_fu_416_p2, "icmp_ln102_fu_416_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul_ln91_fu_212_p00, "mul_ln91_fu_212_p00");
    sc_trace(mVcdFile, mul_ln98_fu_222_p00, "mul_ln98_fu_222_p00");
#endif

    }
}

align::~align() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void align::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln90_fu_244_p2.read(), ap_const_lv1_1))) {
        i_0_reg_144 = i_fu_304_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_144 = ap_const_lv7_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_156 = j_reg_548.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln89_fu_192_p2.read(), ap_const_lv1_0))) {
        j_0_reg_156 = ap_const_lv7_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        max_score_0_fu_54 = select_ln102_2_fu_436_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        max_score_0_fu_54 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pos_0_0_fu_62 = select_ln102_fu_422_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        pos_0_0_fu_62 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        pos_1_0_fu_58 = select_ln102_1_fu_429_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        pos_1_0_fu_58 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln90_fu_244_p2.read()))) {
        add_ln100_reg_543 = add_ln100_fu_293_p2.read();
        add_ln99_reg_538 = add_ln99_fu_288_p2.read();
        j_reg_548 = j_fu_298_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        max_1_reg_563 = max_1_fu_382_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln89_fu_192_p2.read(), ap_const_lv1_0))) {
        mul_ln91_reg_498 = mul_ln91_fu_212_p2.read();
        mul_ln98_reg_509 = mul_ln98_fu_222_p2.read();
        seq1_addr_reg_504 =  (sc_lv<7>) (zext_ln91_fu_203_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        zext_ln89_reg_490 = zext_ln89_fu_188_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        zext_ln90_reg_515 = zext_ln90_fu_240_p1.read();
    }
}

void align::thread_H_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        H_address0 =  (sc_lv<14>) (zext_ln99_1_fu_354_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        H_address0 =  (sc_lv<14>) (zext_ln91_4_fu_269_p1.read());
    } else {
        H_address0 = "XXXXXXXXXXXXXX";
    }
}

void align::thread_H_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        H_address1 =  (sc_lv<14>) (zext_ln100_fu_393_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        H_address1 =  (sc_lv<14>) (zext_ln98_1_fu_279_p1.read());
    } else {
        H_address1 = "XXXXXXXXXXXXXX";
    }
}

void align::thread_H_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        H_ce0 = ap_const_logic_1;
    } else {
        H_ce0 = ap_const_logic_0;
    }
}

void align::thread_H_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        H_ce1 = ap_const_logic_1;
    } else {
        H_ce1 = ap_const_logic_0;
    }
}

void align::thread_H_d1() {
    H_d1 = max_score_fu_408_p3.read();
}

void align::thread_H_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        H_we1 = ap_const_logic_1;
    } else {
        H_we1 = ap_const_logic_0;
    }
}

void align::thread_add_ln100_fu_293_p2() {
    add_ln100_fu_293_p2 = (!mul_ln98_reg_509.read().is_01() || !zext_ln99_fu_284_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(mul_ln98_reg_509.read()) + sc_biguint<14>(zext_ln99_fu_284_p1.read()));
}

void align::thread_add_ln91_1_fu_249_p2() {
    add_ln91_1_fu_249_p2 = (!ap_const_lv7_7F.is_01() || !j_0_reg_156.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7F) + sc_biguint<7>(j_0_reg_156.read()));
}

void align::thread_add_ln91_2_fu_264_p2() {
    add_ln91_2_fu_264_p2 = (!mul_ln91_reg_498.read().is_01() || !zext_ln91_3_fu_260_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(mul_ln91_reg_498.read()) + sc_biguint<14>(zext_ln91_3_fu_260_p1.read()));
}

void align::thread_add_ln91_fu_197_p2() {
    add_ln91_fu_197_p2 = (!i_0_reg_144.read().is_01() || !ap_const_lv7_7F.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_144.read()) + sc_bigint<7>(ap_const_lv7_7F));
}

void align::thread_add_ln92_1_fu_342_p2() {
    add_ln92_1_fu_342_p2 = (!trunc_ln92_fu_332_p1.read().is_01() || !select_ln92_1_fu_324_p3.read().is_01())? sc_lv<31>(): (sc_biguint<31>(trunc_ln92_fu_332_p1.read()) + sc_biguint<31>(select_ln92_1_fu_324_p3.read()));
}

void align::thread_add_ln98_fu_274_p2() {
    add_ln98_fu_274_p2 = (!mul_ln98_reg_509.read().is_01() || !zext_ln91_3_fu_260_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(mul_ln98_reg_509.read()) + sc_biguint<14>(zext_ln91_3_fu_260_p1.read()));
}

void align::thread_add_ln99_fu_288_p2() {
    add_ln99_fu_288_p2 = (!mul_ln91_reg_498.read().is_01() || !zext_ln99_fu_284_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(mul_ln91_reg_498.read()) + sc_biguint<14>(zext_ln99_fu_284_p1.read()));
}

void align::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void align::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void align::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void align::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void align::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void align::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln89_fu_192_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void align::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void align::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_fu_192_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void align::thread_ap_return_0() {
    ap_return_0 = pos_0_0_fu_62.read();
}

void align::thread_ap_return_1() {
    ap_return_1 = pos_1_0_fu_58.read();
}

void align::thread_diag_score_2_fu_336_p2() {
    diag_score_2_fu_336_p2 = (!select_ln92_fu_316_p3.read().is_01() || !H_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(select_ln92_fu_316_p3.read()) + sc_biguint<32>(H_q0.read()));
}

void align::thread_down_score_fu_397_p2() {
    down_score_fu_397_p2 = (!ap_const_lv32_FFFFFFFE.is_01() || !H_q0.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFE) + sc_biguint<32>(H_q0.read()));
}

void align::thread_i_fu_304_p2() {
    i_fu_304_p2 = (!i_0_reg_144.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_144.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void align::thread_icmp_ln102_fu_416_p2() {
    icmp_ln102_fu_416_p2 = (!max_score_0_fu_54.read().is_01() || !max_score_fu_408_p3.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_score_0_fu_54.read()) > sc_bigint<32>(max_score_fu_408_p3.read()));
}

void align::thread_icmp_ln51_fu_358_p2() {
    icmp_ln51_fu_358_p2 = (!diag_score_2_fu_336_p2.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(diag_score_2_fu_336_p2.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void align::thread_icmp_ln54_fu_376_p2() {
    icmp_ln54_fu_376_p2 = (!zext_ln51_fu_372_p1.read().is_01() || !right_score_fu_348_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln51_fu_372_p1.read()) < sc_bigint<32>(right_score_fu_348_p2.read()));
}

void align::thread_icmp_ln57_fu_403_p2() {
    icmp_ln57_fu_403_p2 = (!max_1_reg_563.read().is_01() || !down_score_fu_397_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(max_1_reg_563.read()) < sc_bigint<32>(down_score_fu_397_p2.read()));
}

void align::thread_icmp_ln89_fu_192_p2() {
    icmp_ln89_fu_192_p2 = (!i_0_reg_144.read().is_01() || !n.read().is_01())? sc_lv<1>(): (sc_biguint<7>(i_0_reg_144.read()) > sc_biguint<7>(n.read()));
}

void align::thread_icmp_ln90_fu_244_p2() {
    icmp_ln90_fu_244_p2 = (!j_0_reg_156.read().is_01() || !m.read().is_01())? sc_lv<1>(): (sc_biguint<7>(j_0_reg_156.read()) > sc_biguint<7>(m.read()));
}

void align::thread_icmp_ln92_fu_310_p2() {
    icmp_ln92_fu_310_p2 = (!seq1_q0.read().is_01() || !seq2_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(seq1_q0.read() == seq2_q0.read());
}

void align::thread_j_fu_298_p2() {
    j_fu_298_p2 = (!ap_const_lv7_1.is_01() || !j_0_reg_156.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(j_0_reg_156.read()));
}

void align::thread_max_1_fu_382_p3() {
    max_1_fu_382_p3 = (!icmp_ln54_fu_376_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln54_fu_376_p2.read()[0].to_bool())? right_score_fu_348_p2.read(): zext_ln51_fu_372_p1.read());
}

void align::thread_max_score_fu_408_p3() {
    max_score_fu_408_p3 = (!icmp_ln57_fu_403_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln57_fu_403_p2.read()[0].to_bool())? down_score_fu_397_p2.read(): max_1_reg_563.read());
}

void align::thread_mul_ln91_fu_212_p0() {
    mul_ln91_fu_212_p0 =  (sc_lv<7>) (mul_ln91_fu_212_p00.read());
}

void align::thread_mul_ln91_fu_212_p00() {
    mul_ln91_fu_212_p00 = esl_zext<14,7>(add_ln91_fu_197_p2.read());
}

void align::thread_mul_ln91_fu_212_p2() {
    mul_ln91_fu_212_p2 = (!mul_ln91_fu_212_p0.read().is_01() || !ap_const_lv14_65.is_01())? sc_lv<14>(): sc_biguint<7>(mul_ln91_fu_212_p0.read()) * sc_biguint<14>(ap_const_lv14_65);
}

void align::thread_mul_ln98_fu_222_p0() {
    mul_ln98_fu_222_p0 =  (sc_lv<7>) (mul_ln98_fu_222_p00.read());
}

void align::thread_mul_ln98_fu_222_p00() {
    mul_ln98_fu_222_p00 = esl_zext<14,7>(i_0_reg_144.read());
}

void align::thread_mul_ln98_fu_222_p2() {
    mul_ln98_fu_222_p2 = (!mul_ln98_fu_222_p0.read().is_01() || !ap_const_lv14_65.is_01())? sc_lv<14>(): sc_biguint<7>(mul_ln98_fu_222_p0.read()) * sc_biguint<14>(ap_const_lv14_65);
}

void align::thread_right_score_fu_348_p2() {
    right_score_fu_348_p2 = (!ap_const_lv32_FFFFFFFE.is_01() || !H_q1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFE) + sc_biguint<32>(H_q1.read()));
}

void align::thread_select_ln102_1_fu_429_p3() {
    select_ln102_1_fu_429_p3 = (!icmp_ln102_fu_416_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln102_fu_416_p2.read()[0].to_bool())? pos_1_0_fu_58.read(): zext_ln90_reg_515.read());
}

void align::thread_select_ln102_2_fu_436_p3() {
    select_ln102_2_fu_436_p3 = (!icmp_ln102_fu_416_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln102_fu_416_p2.read()[0].to_bool())? max_score_0_fu_54.read(): max_score_fu_408_p3.read());
}

void align::thread_select_ln102_fu_422_p3() {
    select_ln102_fu_422_p3 = (!icmp_ln102_fu_416_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln102_fu_416_p2.read()[0].to_bool())? pos_0_0_fu_62.read(): zext_ln89_reg_490.read());
}

void align::thread_select_ln51_fu_364_p3() {
    select_ln51_fu_364_p3 = (!icmp_ln51_fu_358_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln51_fu_358_p2.read()[0].to_bool())? add_ln92_1_fu_342_p2.read(): ap_const_lv31_0);
}

void align::thread_select_ln92_1_fu_324_p3() {
    select_ln92_1_fu_324_p3 = (!icmp_ln92_fu_310_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln92_fu_310_p2.read()[0].to_bool())? ap_const_lv31_3: ap_const_lv31_7FFFFFFD);
}

void align::thread_select_ln92_fu_316_p3() {
    select_ln92_fu_316_p3 = (!icmp_ln92_fu_310_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln92_fu_310_p2.read()[0].to_bool())? ap_const_lv32_3: ap_const_lv32_FFFFFFFD);
}

void align::thread_seq1_address0() {
    seq1_address0 = seq1_addr_reg_504.read();
}

void align::thread_seq1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        seq1_ce0 = ap_const_logic_1;
    } else {
        seq1_ce0 = ap_const_logic_0;
    }
}

void align::thread_seq2_address0() {
    seq2_address0 =  (sc_lv<7>) (zext_ln91_1_fu_255_p1.read());
}

void align::thread_seq2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        seq2_ce0 = ap_const_logic_1;
    } else {
        seq2_ce0 = ap_const_logic_0;
    }
}

void align::thread_trunc_ln92_fu_332_p1() {
    trunc_ln92_fu_332_p1 = H_q0.read().range(31-1, 0);
}

void align::thread_zext_ln100_fu_393_p1() {
    zext_ln100_fu_393_p1 = esl_zext<64,14>(add_ln100_reg_543.read());
}

void align::thread_zext_ln51_fu_372_p1() {
    zext_ln51_fu_372_p1 = esl_zext<32,31>(select_ln51_fu_364_p3.read());
}

void align::thread_zext_ln89_fu_188_p1() {
    zext_ln89_fu_188_p1 = esl_zext<32,7>(i_0_reg_144.read());
}

void align::thread_zext_ln90_fu_240_p1() {
    zext_ln90_fu_240_p1 = esl_zext<32,7>(j_0_reg_156.read());
}

void align::thread_zext_ln91_1_fu_255_p1() {
    zext_ln91_1_fu_255_p1 = esl_zext<64,7>(add_ln91_1_fu_249_p2.read());
}

void align::thread_zext_ln91_3_fu_260_p1() {
    zext_ln91_3_fu_260_p1 = esl_zext<14,7>(add_ln91_1_fu_249_p2.read());
}

void align::thread_zext_ln91_4_fu_269_p1() {
    zext_ln91_4_fu_269_p1 = esl_zext<64,14>(add_ln91_2_fu_264_p2.read());
}

void align::thread_zext_ln91_fu_203_p1() {
    zext_ln91_fu_203_p1 = esl_zext<64,7>(add_ln91_fu_197_p2.read());
}

void align::thread_zext_ln98_1_fu_279_p1() {
    zext_ln98_1_fu_279_p1 = esl_zext<64,14>(add_ln98_fu_274_p2.read());
}

void align::thread_zext_ln99_1_fu_354_p1() {
    zext_ln99_1_fu_354_p1 = esl_zext<64,14>(add_ln99_reg_538.read());
}

void align::thread_zext_ln99_fu_284_p1() {
    zext_ln99_fu_284_p1 = esl_zext<14,7>(j_0_reg_156.read());
}

void align::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln89_fu_192_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln90_fu_244_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

}

