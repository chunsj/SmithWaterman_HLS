// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _traceback_HH_
#define _traceback_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "SmithWaterman_mulbkb.h"

namespace ap_rtl {

struct traceback : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > seq1_address0;
    sc_out< sc_logic > seq1_ce0;
    sc_in< sc_lv<8> > seq1_q0;
    sc_out< sc_lv<7> > seq2_address0;
    sc_out< sc_logic > seq2_ce0;
    sc_in< sc_lv<8> > seq2_q0;
    sc_out< sc_lv<14> > H_address0;
    sc_out< sc_logic > H_ce0;
    sc_in< sc_lv<32> > H_q0;
    sc_out< sc_lv<14> > H_address1;
    sc_out< sc_logic > H_ce1;
    sc_in< sc_lv<32> > H_q1;
    sc_in< sc_lv<32> > pos_0_read;
    sc_in< sc_lv<32> > pos_1_read;
    sc_out< sc_lv<7> > aligned_seq1_address0;
    sc_out< sc_logic > aligned_seq1_ce0;
    sc_out< sc_logic > aligned_seq1_we0;
    sc_out< sc_lv<8> > aligned_seq1_d0;
    sc_in< sc_lv<8> > aligned_seq1_q0;
    sc_out< sc_lv<7> > aligned_seq2_address0;
    sc_out< sc_logic > aligned_seq2_ce0;
    sc_out< sc_logic > aligned_seq2_we0;
    sc_out< sc_lv<8> > aligned_seq2_d0;
    sc_in< sc_lv<8> > aligned_seq2_q0;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    traceback(sc_module_name name);
    SC_HAS_PROCESS(traceback);

    ~traceback();

    sc_trace_file* mVcdFile;

    SmithWaterman_mulbkb<1,1,8,15,15>* SmithWaterman_mulbkb_U6;
    SmithWaterman_mulbkb<1,1,8,15,15>* SmithWaterman_mulbkb_U7;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > j_0_load_reg_627;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > i_0_load_reg_632;
    sc_signal< sc_lv<1> > and_ln127_fu_355_p2;
    sc_signal< sc_lv<1> > and_ln127_reg_637;
    sc_signal< sc_lv<32> > add_ln146_fu_361_p2;
    sc_signal< sc_lv<32> > add_ln146_reg_641;
    sc_signal< sc_lv<15> > trunc_ln130_fu_367_p1;
    sc_signal< sc_lv<15> > trunc_ln130_reg_646;
    sc_signal< sc_lv<15> > mul_ln130_fu_598_p2;
    sc_signal< sc_lv<15> > mul_ln130_reg_651;
    sc_signal< sc_lv<32> > H_load_reg_661;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > j_1_fu_391_p2;
    sc_signal< sc_lv<32> > j_1_reg_671;
    sc_signal< sc_lv<1> > icmp_ln130_fu_385_p2;
    sc_signal< sc_lv<15> > add_ln140_fu_405_p2;
    sc_signal< sc_lv<15> > add_ln140_reg_676;
    sc_signal< sc_lv<32> > i_fu_410_p2;
    sc_signal< sc_lv<32> > i_reg_681;
    sc_signal< sc_lv<15> > add_ln141_fu_434_p2;
    sc_signal< sc_lv<15> > add_ln141_reg_691;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > seq1_load_reg_716;
    sc_signal< sc_lv<8> > seq2_load_reg_721;
    sc_signal< sc_lv<1> > and_ln142_fu_477_p2;
    sc_signal< sc_lv<1> > and_ln142_reg_726;
    sc_signal< sc_lv<32> > j_fu_542_p2;
    sc_signal< sc_lv<32> > j_reg_736;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > i_1_fu_554_p2;
    sc_signal< sc_lv<32> > i_1_reg_744;
    sc_signal< sc_lv<7> > aligned_seq1_addr_4_reg_749;
    sc_signal< sc_lv<1> > icmp_ln66_fu_548_p2;
    sc_signal< sc_lv<7> > aligned_seq1_addr_5_reg_754;
    sc_signal< sc_lv<32> > j_2_fu_570_p2;
    sc_signal< sc_lv<32> > j_2_reg_759;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > i_2_fu_582_p2;
    sc_signal< sc_lv<32> > i_2_reg_767;
    sc_signal< sc_lv<7> > aligned_seq2_addr_5_reg_772;
    sc_signal< sc_lv<1> > icmp_ln66_1_fu_576_p2;
    sc_signal< sc_lv<7> > aligned_seq2_addr_6_reg_777;
    sc_signal< sc_lv<32> > len_assign_reg_259;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > i_0_i_reg_271;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > j_0_in_i_reg_282;
    sc_signal< sc_lv<32> > i_0_i2_reg_292;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > j_0_in_i3_reg_303;
    sc_signal< sc_lv<64> > sext_ln130_fu_380_p1;
    sc_signal< sc_lv<64> > sext_ln133_fu_429_p1;
    sc_signal< sc_lv<64> > zext_ln133_1_fu_415_p1;
    sc_signal< sc_lv<64> > zext_ln133_fu_396_p1;
    sc_signal< sc_lv<64> > sext_ln165_fu_438_p1;
    sc_signal< sc_lv<64> > sext_ln140_fu_444_p1;
    sc_signal< sc_lv<64> > sext_ln141_fu_448_p1;
    sc_signal< sc_lv<64> > sext_ln155_fu_523_p1;
    sc_signal< sc_lv<1> > and_ln148_fu_506_p2;
    sc_signal< sc_lv<1> > and_ln153_fu_517_p2;
    sc_signal< sc_lv<7> > aligned_seq2_addr_3_gep_fu_186_p3;
    sc_signal< sc_lv<64> > sext_ln150_fu_530_p1;
    sc_signal< sc_lv<64> > sext_ln145_fu_536_p1;
    sc_signal< sc_lv<64> > sext_ln68_fu_560_p1;
    sc_signal< sc_lv<64> > sext_ln69_fu_565_p1;
    sc_signal< sc_lv<64> > sext_ln68_1_fu_588_p1;
    sc_signal< sc_lv<64> > sext_ln69_1_fu_593_p1;
    sc_signal< sc_lv<32> > j_0_fu_54;
    sc_signal< sc_lv<32> > i_0_fu_58;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > icmp_ln127_fu_343_p2;
    sc_signal< sc_lv<1> > icmp_ln127_1_fu_349_p2;
    sc_signal< sc_lv<15> > add_ln130_fu_375_p2;
    sc_signal< sc_lv<15> > trunc_ln140_fu_401_p1;
    sc_signal< sc_lv<15> > mul_ln133_fu_605_p2;
    sc_signal< sc_lv<15> > add_ln133_2_fu_424_p2;
    sc_signal< sc_lv<1> > icmp_ln134_fu_452_p2;
    sc_signal< sc_lv<32> > select_ln134_fu_458_p3;
    sc_signal< sc_lv<32> > diag_score_1_fu_466_p2;
    sc_signal< sc_lv<1> > grp_fu_313_p2;
    sc_signal< sc_lv<1> > icmp_ln142_1_fu_472_p2;
    sc_signal< sc_lv<32> > up_score_fu_489_p2;
    sc_signal< sc_lv<1> > icmp_ln148_fu_495_p2;
    sc_signal< sc_lv<1> > icmp_ln148_1_fu_501_p2;
    sc_signal< sc_lv<32> > left_score_fu_483_p2;
    sc_signal< sc_lv<1> > icmp_ln153_1_fu_512_p2;
    sc_signal< sc_lv<8> > mul_ln130_fu_598_p0;
    sc_signal< sc_lv<15> > mul_ln130_fu_598_p1;
    sc_signal< sc_lv<8> > mul_ln133_fu_605_p0;
    sc_signal< sc_lv<15> > mul_ln133_fu_605_p1;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_2D;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<32> ap_const_lv32_FFFFFFFD;
    static const sc_lv<32> ap_const_lv32_FFFFFFFE;
    static const sc_lv<15> ap_const_lv15_65;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_H_address0();
    void thread_H_address1();
    void thread_H_ce0();
    void thread_H_ce1();
    void thread_add_ln130_fu_375_p2();
    void thread_add_ln133_2_fu_424_p2();
    void thread_add_ln140_fu_405_p2();
    void thread_add_ln141_fu_434_p2();
    void thread_add_ln146_fu_361_p2();
    void thread_aligned_seq1_address0();
    void thread_aligned_seq1_ce0();
    void thread_aligned_seq1_d0();
    void thread_aligned_seq1_we0();
    void thread_aligned_seq2_addr_3_gep_fu_186_p3();
    void thread_aligned_seq2_address0();
    void thread_aligned_seq2_ce0();
    void thread_aligned_seq2_d0();
    void thread_aligned_seq2_we0();
    void thread_and_ln127_fu_355_p2();
    void thread_and_ln142_fu_477_p2();
    void thread_and_ln148_fu_506_p2();
    void thread_and_ln153_fu_517_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_diag_score_1_fu_466_p2();
    void thread_grp_fu_313_p2();
    void thread_i_1_fu_554_p2();
    void thread_i_2_fu_582_p2();
    void thread_i_fu_410_p2();
    void thread_icmp_ln127_1_fu_349_p2();
    void thread_icmp_ln127_fu_343_p2();
    void thread_icmp_ln130_fu_385_p2();
    void thread_icmp_ln134_fu_452_p2();
    void thread_icmp_ln142_1_fu_472_p2();
    void thread_icmp_ln148_1_fu_501_p2();
    void thread_icmp_ln148_fu_495_p2();
    void thread_icmp_ln153_1_fu_512_p2();
    void thread_icmp_ln66_1_fu_576_p2();
    void thread_icmp_ln66_fu_548_p2();
    void thread_j_1_fu_391_p2();
    void thread_j_2_fu_570_p2();
    void thread_j_fu_542_p2();
    void thread_left_score_fu_483_p2();
    void thread_mul_ln130_fu_598_p0();
    void thread_mul_ln130_fu_598_p1();
    void thread_mul_ln133_fu_605_p0();
    void thread_mul_ln133_fu_605_p1();
    void thread_select_ln134_fu_458_p3();
    void thread_seq1_address0();
    void thread_seq1_ce0();
    void thread_seq2_address0();
    void thread_seq2_ce0();
    void thread_sext_ln130_fu_380_p1();
    void thread_sext_ln133_fu_429_p1();
    void thread_sext_ln140_fu_444_p1();
    void thread_sext_ln141_fu_448_p1();
    void thread_sext_ln145_fu_536_p1();
    void thread_sext_ln150_fu_530_p1();
    void thread_sext_ln155_fu_523_p1();
    void thread_sext_ln165_fu_438_p1();
    void thread_sext_ln68_1_fu_588_p1();
    void thread_sext_ln68_fu_560_p1();
    void thread_sext_ln69_1_fu_593_p1();
    void thread_sext_ln69_fu_565_p1();
    void thread_trunc_ln130_fu_367_p1();
    void thread_trunc_ln140_fu_401_p1();
    void thread_up_score_fu_489_p2();
    void thread_zext_ln133_1_fu_415_p1();
    void thread_zext_ln133_fu_396_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
